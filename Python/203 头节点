# 添加头节点（牛）
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeElements(self, head: Optional[ListNode], val: int) -> Optional[ListNode]:
        # 添加头节点dummy
        dummy = ListNode(0)
        dummy.next = head
        
        pre, cur = dummy, dummy.next
        while cur!=None:
            if cur.val==val:
                pre.next = cur.next
                cur = pre.next
                continue
            pre, cur = pre.next, cur.next
        return dummy.next
            
        
# 不用头节点（差）
class Solution:
    def removeElements(self, head: Optional[ListNode], val: int) -> Optional[ListNode]:
        #不用头节点，所以要
        while head != None and head.val==val:
            head=head.next
        if head == None:
            return head
            
        pre, cur = head, head.next
        while cur!=None:
            if cur.val==val:
                pre.next = cur.next
                cur = pre.next
                continue
            pre, cur = pre.next, cur.next
        return head
            
        
